@model FantasyRollerDerby.Models._Home

@{
    ViewBag.Title = "Home Page";
}

<script type="text/javascript">
    $(document).ready(function () {
        if (('@ViewBag.HomeError') != "") {
            //unhide modal
            $("#modalHomeError").removeClass("hidden");
            $("#triggerHomeError").click();
        } else {
            //hide modal or keep it hidden
            $("#modalHomeError").addClass("hidden");
        }
    });

    function GoToLeague(LeagueID, SeasonID, FantasyTeamID, type){
        $("#inputLeagueID").val(LeagueID);
        $("#inputSeasonID").val(SeasonID);
        $("#inputFantasyTeamID").val(FantasyTeamID);
        $("#inputBtnAction").val(type);
        $("#hiddenSubmit").click();
    }
</script>

<!--Error Modal-->
<button id="triggerHomeError" data-toggle="modal" class="hidden" data-target="#modalHomeError"></button>
<div id="modalHomeError" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h2 class="modal-title text-center"><b>Home Page Error</b></h2>
            </div>
            <div class="modal-body">
                <div class="danger row">
                    <h4 class="text-center">@ViewBag.HomeError</h4>
                </div>
            </div>
            <div class="modal-footer">
                <h6 class="text-center">***click outside this window to close the notification***<br /></h6>
            </div>
        </div>
    </div>
</div>
<!--Error Modal-->

<!--v CoverFlow v-->
@*<div style="background-color:black;">
    <div class="row">
        <div class="col-xs-12">
            @Html.Partial("_CoverFlow")
        </div>
    </div>
</div>*@
<!--^ CoverFlow ^-->

@using (Html.BeginForm("Index", "League", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <!--v Input Items v-->
    <input id="inputLeagueID" type="hidden" name="LeagueID" value="none" />
    <input id="inputSeasonID" type="hidden" name="SeasonID" value="none" />
    <input id="inputFantasyTeamID" type="hidden" name="FantasyTeamID" value="none" />
    <input id="inputBtnAction" type="hidden" name="buttonAction" value="none" />
    <input id="hiddenSubmit" type="submit" class="hidden" />
    <!--^ Input Items ^-->

    <!--v Welcome Message v-->
    <div class="row mobileHide">
        <video class="logoGreeting" autoplay loop>
            <source src="http://jasondeutsch.info/Images/Header_Video.mp4" type="video/mp4">
            Your browser does not support the video tag.
        </video>
    </div>
    <div class="row">
        <img src="~/Images/Member_header.jpg" class="logoGreeting" />
    </div>
    <!--^ Welcome Message ^-->
    
    <!--v Public Leagues v-->
    <div class="row">
        <br /><br /><br />
        <img src="~/Images/YourPublicLeagues.png" class="img-responsive" />
        <br />
        <div id="divPublicLeaguesSearchGrid mobileText">
            @if (Model.list_cLeaguePublic != null && Model.list_cLeaguePublic.Count > 0)
            {
                WebGrid gridPublicLeagues = new WebGrid(Model.list_cLeaguePublic, rowsPerPage: 5,
                    sortFieldName: "gridPublicLeaguesSort", ajaxUpdateContainerId: "divPublicLeaguesSearchGrid");
                var rowNum = 0;
                @gridPublicLeagues.GetHtml(tableStyle: "table table-bordered table-striped table-hover tableHome gridPublicLeagues table-responsive",
             htmlAttributes: new { id = "gridPublicLeagues" },
             headerStyle: "",
             footerStyle: "",
             alternatingRowStyle: "",
             columns: gridPublicLeagues.Columns(
                 gridPublicLeagues.Column("Logo", header: " ",
                     format:
                    @<div>
                        <img class="img-responsive memberListLogo mobileHide" src="~/Images/TeamLogos/@item.Logo" />
                        @Html.Hidden("RowNumber", rowNum = rowNum + 1)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].FantasyTeamID", (int)item.FantasyTeamID)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].TeamName", (string)item.TeamName)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].LeagueID", (int)item.LeagueID)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].SeasonID", (int)item.SeasonID)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].CommissionerUserID", (int)item.CommissionerUserID)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].CommissionerUserName", (string)item.CommissionerUserName)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].LeagueName", (string)item.LeagueName)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].DraftDate", (DateTime)item.DraftDate)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].StartDate", (DateTime)item.StartDate)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].EndDate", (DateTime)item.EndDate)
                        @Html.Hidden("list_cLeaguePublic[" + (rowNum - 1) + "].isPublic", (Boolean)item.isPublic)
                    </div>
                    ),
                gridPublicLeagues.Column("TeamName", header: "Team Name", format: (item) => item.TeamName),
                gridPublicLeagues.Column("LeagueName", header: "League Name",
                    format: @<button class="btn btn-link" onclick="GoToLeague('@item.LeagueID', '@item.SeasonID', '@item.FantasyTeamID', 'public');">@item.LeagueName</button>),
                gridPublicLeagues.Column("Commissioner", header: "Commissioner", format: (item) => item.CommissionerUserName),
                gridPublicLeagues.Column("DraftDate", header: "Draft Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.DraftDate)),
                gridPublicLeagues.Column("StartDate", header: "Start Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.StartDate)),
                gridPublicLeagues.Column("EndDate", header: "End Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.EndDate))))
            }
            else
            {
                <table id="gridPublicLeagues" class="table table-bordered table-striped table-hover tableHome table-responsive">
                    <thead>
                        <tr class="text-center">
                            <th scope="col" class="text-center"></th>
                            <th scope="col" class="text-center">Team Name</th>
                            <th scope="col" class="text-center">League Name</th>
                            <th scope="col" class="text-center">Commissioner</th>
                            <th scope="col" class="text-center">Draft Date</th>
                            <th scope="col" class="text-center">Start Date</th>
                            <th scope="col" class="text-center">End Date</th>
                        </tr>
                    </thead>
                </table>
                <h3 class="text-center">No Results</h3>
            }
        </div>
        @Html.ActionLink(linkText: "Create League", actionName: "CreateLeague", controllerName: "League",
            routeValues: new { leagueType = "public" }, htmlAttributes: new { @class = "btn btn-primary pull-right" })
    </div>
    <!--^ Public Leagues ^-->
    <br /><br />
    <!--v Private Leagues v-->
    <div class="row">
        <img src="~/Images/YourPrivateLeagues.png" class="img-responsive" />
        <br />
        <div id="divPrivateLeaguesSearchGrid mobileText">
            @if (Model.list_cLeaguePrivate != null && Model.list_cLeaguePrivate.Count > 0)
            {
                WebGrid gridPrivateLeagues = new WebGrid(Model.list_cLeaguePrivate, rowsPerPage: 5,
                    sortFieldName: "gridPrivateLeaguesSort", ajaxUpdateContainerId: "divPrivateLeaguesSearchGrid");
                var rowNum = 0;
                @gridPrivateLeagues.GetHtml(tableStyle: "table table-bordered table-striped table-hover tableHome gridPrivateLeagues table-responsive",
                htmlAttributes: new { id = "gridPrivateLeagues" },
                headerStyle: "",
                footerStyle: "",
                alternatingRowStyle: "",
                columns: gridPrivateLeagues.Columns(
                 gridPrivateLeagues.Column("Logo", header: " ",
                     format:
                    @<div>
                        <img class="img-responsive memberListLogo mobileHide" src="~/Images/TeamLogos/@item.Logo" />
                        @Html.Hidden("RowNumber", rowNum = rowNum + 1)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].FantasyTeamID", (int)item.FantasyTeamID)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].TeamName", (string)item.TeamName)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].LeagueID", (int)item.LeagueID)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].SeasonID", (int)item.SeasonID)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].CommissionerUserID", (int)item.CommissionerUserID)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].CommissionerUserName", (string)item.CommissionerUserName)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].LeagueName", (string)item.LeagueName)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].DraftDate", (DateTime)item.DraftDate)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].StartDate", (DateTime)item.StartDate)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].EndDate", (DateTime)item.EndDate)
                        @Html.Hidden("list_cLeaguePrivate[" + (rowNum - 1) + "].isPublic", (Boolean)item.isPublic)
                    </div>
                    ),
                gridPrivateLeagues.Column("TeamName", header: "Team Name", format: (item) => item.TeamName),
                gridPrivateLeagues.Column("LeagueName", header: "League Name", 
                    format: @<button class="btn btn-link" onclick="GoToLeague('@item.LeagueID', '@item.SeasonID', '@item.FantasyTeamID', 'private');">@item.LeagueName</button>),
                gridPrivateLeagues.Column("Commissioner", header: "Commissioner", format: (item) => item.CommissionerUserName),
                gridPrivateLeagues.Column("DraftDate", header: "Draft Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.DraftDate)),
                gridPrivateLeagues.Column("StartDate", header: "Start Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.StartDate)),
                gridPrivateLeagues.Column("EndDate", header: "End Date", format: (item) => string.Format("{0:MM/dd/yyyy}", item.EndDate))))
            }
            else
            {
                <table id="gridPrivateLeagues" class="table table-bordered table-striped table-hover tableHome table-responsive">
                    <thead>
                        <tr class="text-center">
                            <th scope="col" class="text-center"></th>
                            <th scope="col" class="text-center">Team Name</th>
                            <th scope="col" class="text-center">League Name</th>
                            <th scope="col" class="text-center">Commissioner</th>
                            <th scope="col" class="text-center">Draft Date</th>
                            <th scope="col" class="text-center">Start Date</th>
                            <th scope="col" class="text-center">End Date</th>
                        </tr>
                    </thead>
                </table>
                <h3 class="text-center">No Results</h3>
            }
        </div>
        @Html.ActionLink(linkText: "Create League", actionName: "CreateLeague", controllerName: "League",
            routeValues: new { leagueType = "private" }, htmlAttributes: new { @class = "btn btn-primary pull-right" })
    </div>
    <!--^ Private Leagues ^-->
}